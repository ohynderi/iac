---
- set_fact:
    async_jobs : [] 
    tenant_present: "{{ ( tenant_vars.state is defined and tenant_vars.state == 'present' ) or tenant_vars.state is not defined }}"
    aci_cred: &aci_login
      host: "{{ inventory_hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      use_proxy: no
      use_ssl: yes
      validate_certs: no
      annotation: orchestrator:ansible

- name: Create tenant
  aci_tenant:
    <<: *aci_login
    tenant: '{{ tenant_vars.name }}'
    description: '{{ tenant_vars.description }}'
    state: "{{ tenant_vars.state | default('present') }}"
  delegate_to: localhost

- name: Import vrf tasks
  include_tasks: vrf.yml
  loop: '{{ tenant_vars.vrfs | default( [] ) }}'
  loop_control:
    loop_var: vrf_vars
    label: "{{ [ tenant_vars.name, vrf_vars.name ] | join('/') }}"
  when: tenant_present

- name: Import bd tasks
  include_tasks: bd.yml
  loop: '{{ tenant_vars.bridge_domains | default( [] ) }}'
  loop_control:
    loop_var: bd_vars
    label: "{{ [ tenant_vars.name, bd_vars.name ] | join('/') }}"
  when: tenant_present

- name: Import ap tasks
  include_tasks: ap.yml
  loop: '{{ tenant_vars.application_profiles | default( [] ) }}'
  loop_control:
    loop_var: ap_vars
    label: "{{ [ tenant_vars.name, ap_vars.name ] | join('/') }}"
  when: tenant_present

- name: Import l3out tasks
  include_tasks: l3out.yml
  loop: '{{ tenant_vars.l3outs | default( [] ) }}'
  loop_control:
    loop_var: l3out_vars
    label: "{{ [ tenant_vars.name, l3out_vars.name ] | join('/') }}"
  when: tenant_present

- name: Import contract tasks
  include_tasks: contract.yml
  loop: '{{ tenant_vars.contracts | default( [] ) }}'
  loop_control:
    loop_var: contract_vars
    label: "{{ [ tenant_vars.name, contract_vars.name ] | join('/') }}"
  when: tenant_present

- name: Import filter tasks
  include_tasks: filter.yml
  loop: '{{ tenant_vars.filters | default( [] ) }}'
  loop_control:
    loop_var: filter_vars
    label: "{{ [ tenant_vars.name, filter_vars.name ] | join('/') }}"
  when: tenant_present
