---
- set_fact:
    aci_cred: &aci_login
      host: "{{ inventory_hostname }}"
      username: "{{ username }}"
      password: "{{ password }}"
      use_proxy: no
      use_ssl: yes
      validate_certs: no
      annotation: orchestrator:ansible
  no_log: true

- block:
    - set_fact:
        intf_pg_map: "{{ intf_pg_map | combine({ intf_pol_grp.name : 'port_channel' }) }}"
      when: intf_pol_grp.type == 'po'

    - set_fact:
        intf_pg_map: "{{ intf_pg_map | combine({ intf_pol_grp.name : 'vpc' }) }}"
      when: intf_pol_grp.type == 'vpc'

    - cisco.aci.aci_interface_policy_leaf_policy_group:
        <<: *aci_cred
        lag_type: "{{ 'node' if intf_pol_grp.type == 'vpc' else 'link' }}"
        policy_group: "{{ intf_pol_grp.name }}"
        lldp_policy: "{{ intf_pol_grp.lldp | default(None) }}"
        port_channel_policy: "{{ intf_pol_grp.portchannel |  default(None) }}"
        aep: "{{ intf_pol_grp.aep | default(None) }}"
        description: "{{ intf_pol_grp.description | default(None) }}"
        state: "{{ intf_pol_grp.state | default('present') }}"
      delegate_to: localhost

  when: intf_pol_grp.type != 'access'

- block:
    - set_fact:
        intf_pg_map: "{{ intf_pg_map | combine({ intf_pol_grp.name : 'switch_port' }) }}"

    - cisco.aci.aci_interface_policy_leaf_policy_group:
        <<: *aci_cred
        lag_type: leaf
        policy_group: "{{ intf_pol_grp.name }}"
        lldp_policy: "{{ intf_pol_grp.lldp | default(None) }}"
        cdp_policy: "{{ intf_pol_grp.cdp | default(None) }}"
        aep: "{{ intf_pol_grp.aep | default(None) }}"
        description: "{{ intf_pol_grp.description | default(None) }}"
        state: "{{ intf_pol_grp.state | default('present') }}"
      delegate_to: localhost

  when: intf_pol_grp.type == 'access'
